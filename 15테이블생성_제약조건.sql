--DDL문 CREATE, ALTER, DROP
--오라클 대표 데이터 타입( VARCHAR2 - 가변문자, CHAR - 고정문자, NUMBER - 숫자 DATE - 날짜)

CREATE TABLE DEPT2 (
             DEPT_NO NUMBER(2), --자리수
             DEPT_NAME VARCHAR(20), -- 최대 20바이트, 가변문자형
             DEPT_YN CHAR(1), --1BYTE 고정문자형
             DEPT_DATE DATE,
             DEPT_BONUS NUMBER(10,3) -- 10자리, 소수부 3자리
);

DESC DEPT2;
INSERT INTO DEPT2 VALUES(99, 'SALES', 'Y', SYSDATE, 3.14);
INSERT INTO DEPT2 VALUES(100, 'SALES', '홍', SYSDATE, 3.14); --한글은 2바이트, 데이터입력X

SELECT * FROM DEPT2;
COMMIT;

--------------------------------------------------------------------------------
--열추가
ALTER TABLE DEPT2 ADD(DEPT_COUNT NUMBER(3));

--열 이름변경
ALTER TABLE DEPT2 RENAME COLUMN DEPT_COUNT TO EMP_COUNT;

--열 수정(타입변경)
ALTER TABLE DEPT2 MODIFY(EMP_COUNT NUMBER(10));

--열 삭제
ALTER TABLE DEPT2 DROP COLUMN EMP_COUNT;
SELECT * FROM DEPT2;

--테이블 삭제
DROP TABLE DEPT2;
-- DROP TABLE DEPT2 CASCASE; -- 제약조건명FK 도 삭제, 테이블도 삭제. 알아만 두고 쓰면 안됨

--------------------------------------------------------------------------------
--제약조건
--열레벨 제약조건(테이블 생성 당시에 열 옆에 적습니다)
SELECT * FROM USER_CONSTRAINTS;
--제약조건 이름이 자동생성됨
CREATE TABLE DEPTS2(
    DEPT_NO NUMBER(2)        PRIMARY KEY,
    DEPT_NAME VARCHAR2 (20)  NOT NULL,
    DEPT_DATE DATE           DEFAULT SYSDATE, --제약조건X(컬럼의 기본값)
    DEPT_PHONE VARCHAR2(20)  UNIQUE,
    DEPT_BONUS NUMBER(10)    CHECK( DEPT_BONUS > 0 ),   
    LOCA NUMBER(4)           REFERENCES LOCATIONS(LOCATION_ID) --참조테이블(참조컬럼)FK
);
--제약조건 이름을 지정
CREATE TABLE DEPTS2(
    DEPT_NO NUMBER(2)       CONSTRAINT DEPT2_PK PRIMARY KEY,
    DEPT_NAME VARCHAR2 (20) CONSTRAINT DEPT2_NAME_NN NOT NULL,
    DEPT_DATE DATE          DEFAULT SYSDATE, --제약조건X(컬럼의 기본값)
    DEPT_PHONE VARCHAR2(20) CONSTRAINT DEPT2_PHONE_UK UNIQUE,
    DEPT_BONUS NUMBER(10)   CONSTRAINT DEPT2_BONUS_CK CHECK( DEPT_BONUS > 0 ),   
    LOCA NUMBER(4)          CONSTRAINT DEPT2_LOCA_FK REFERENCES LOCATIONS(LOCATION_ID) --참조테이블(참조컬럼)FK
);

DROP TABLE DEPTS2;
--테이블 레벨 제약조건 (슈퍼키나, 다중 FK등 선언이 가능)
CREATE TABLE DEPTS2(
    DEPT_NO NUMBER(2),        
    DEPT_NAME VARCHAR2 (20)  NOT NULL, --NOT NULL은 테이블 레벨 제약이 안됨 
    DEPT_DATE DATE           DEFAULT SYSDATE, --제약조건X(컬럼의 기본값)
    DEPT_PHONE VARCHAR2(20),  
    DEPT_BONUS NUMBER(10),    
    LOCA NUMBER(4),
    --
    CONSTRAINT DEPT_PK PRIMARY KEY (DEPT_NO/*, DEPT_NAME*/), --(DEPT_NO, DEPT_NAME) - 두개 합쳐진 PK
    CONSTRAINT DEPT_PHONE_UK UNIQUE (DEPT_PHONE),
    CONSTRAINT DEPT_BONUS_CK CHECK (DEPT_BONUS > 0),
    CONSTRAINT DEPT_LOCA_FK FOREIGN KEY (LOCA) REFERENCES LOCATIONS (LOCATION_ID)
);

DESC DEPTS2;

INSERT INTO DEPTS2 VALUES(10, 'HONG', SYSDATE, '010-....', 10000, 1000);
 --개체무결성 (NULL과 중복값을 허용하지 않음)
INSERT INTO DEPTS2 VALUES(10, 'HONG', SYSDATE, '010-....', 10000, 1000);
--참조무결성 (참조테이블의 PK가 아닌 값이 FK에 들어갈 수 없음)
--LOCA 500은 LOCATIONS의 PK가 아님
INSERT INTO DEPTS2 VALUES(20, 'HONG', SYSDATE, '01011111111', 10000, 500);
--도메인 무결성(값은 컬럼에 정의된 값이어야 한다)
INSERT INTO DEPTS2 VALUES(30, 'HONG', SYSDATE, '01022222222', -1000, 1000);

--------------------------------------------------------------------------------
--제약조건을 추가 OR 삭제
CREATE TABLE DEPTS2(
    DEPT_NO NUMBER(2),        
    DEPT_NAME VARCHAR2 (20),  
    DEPT_DATE DATE           DEFAULT SYSDATE, --제약조건X(컬럼의 기본값)
    DEPT_PHONE VARCHAR2(20),  
    DEPT_BONUS NUMBER(10),    
    LOCA NUMBER(4)
    --
--    CONSTRAINT DEPT_PK PRIMARY KEY (DEPT_NO/*, DEPT_NAME*/), --(DEPT_NO, DEPT_NAME) - 두개 합쳐진 PK
--    CONSTRAINT DEPT_PHONE_UK UNIQUE (DEPT_PHONE),
--    CONSTRAINT DEPT_BONUS_CK CHECK (DEPT_BONUS > 0),
--    CONSTRAINT DEPT_LOCA_FK FOREIGN KEY (LOCA) REFERENCES LOCATIONS (LOCATION_ID)
);

--제약조건은 수정이 없음
ALTER TABLE DEPTS2 ADD CONSTRAINT DEPT_PK PRIMARY KEY (DEPT_NO);
ALTER TABLE DEPTS2 ADD CONSTRAINT DEPT_PHONE_UK UNIQUE (DEPT_PHONE);
ALTER TABLE DEPTS2 ADD CONSTRAINT DEPT_BONUS_CK CHECK (DEPT_BONUS > 0);
ALTER TABLE DEPTS2 ADD CONSTRAINT DEPT_LOCA_FK FOREIGN KEY (LOCA) REFERENCES LOCATIONS (LOCATION_ID);
--NOT NULL은 MODIFY문장으로 수정을 합니다.
ALTER TABLE DEPTS2 MODIFY DEPT_NAME VARCHAR2(20) NOT NULL;
--제약조건 삭제
ALTER TABLE DEPTS2 DROP CONSTRAINT DEPT_LOCA_FK;

CREATE TABLE DEPTS2 
(
  DEPT_NO NUMBER(2) NOT NULL 
, DEPT_NAME VARCHAR2(20) NOT NULL 
, DEPT_DATE DATE DEFAULT SYSDATE 
, DEPT_PHONE VARCHAR2(20) 
, DEPT_BONUS NUMBER(10) 
, LOCA NUMBER(4) 
, CONSTRAINT DEPTS2_PK PRIMARY KEY  (   DEPT_NO  )  ENABLE );

ALTER TABLE DEPTS2 ADD CONSTRAINT DEPTS2_UK1 UNIQUE (  DEPT_PHONE ) ENABLE;

ALTER TABLE DEPTS2 ADD CONSTRAINT DEPTS2_FK1 FOREIGN KEY ( LOCA )REFERENCES LOCATIONS(  LOCATION_ID )ENABLE;

ALTER TABLE DEPTS2 ADD CONSTRAINT DEPTS2_CHK1 CHECK (DEPT_BONUS > 0) ENABLE;

--------------------------------------------------------------------------------
--연습문제
--문제 1.
--다음과 같은 테이블을 생성하고 데이터를 insert하세요 (커밋)
--M_NAME   M_NUM   REG_DATE   GENDER   LOCA
-- AAA       1    2018-07-01    M      1800
-- BBB       2    2018-07-02    F      1900
-- CCC       3    2018-07-03    M      2000
-- DDD       4     오늘날짜      M      2000
--조건) M_NAME 는 가변문자형, 널값을 허용하지 않음
--조건) M_NUM 은 숫자형, 이름(mem_memnum_pk) primary key
--조건) REG_DATE 는 날짜형, 널값을 허용하지 않음, 이름:(mem_regdate_uk) UNIQUE키
--조건) GENDER 고정문자형 1개 ('M' OR 'F')
--조건) LOCA 숫자형, 이름:(mem_loca_loc_locid_fk) foreign key ? 참조 locations테이블(location_id)
--문제 2.
--MEMBERS테이블과 LOCATIONS테이블을 INNER JOIN 하고 m_name, m_mum, street_address, location_id
--컬럼만 조회
--m_num기준으로 오름차순 조회

CREATE TABLE MEMBERS (
    M_NAME VARCHAR2(30) NOT NULL,
    M_NUM NUMBER(5) ,
    REG_DATE DATE,
    GENDER CHAR(1),
    LOCA NUMBER(4) 
);
ALTER TABLE MEMBERS ADD CONSTRAINT MEM_MEMNUM_PK PRIMARY KEY (M_NUM);
ALTER TABLE MEMBERS ADD CONSTRAINT MEM_REGDATE_UK UNIQUE (REG_DATE);
ALTER TABLE MEMBERS ADD CONSTRAINT MEM_GENDER_CK CHECK (GENDER IN ('M', 'F'));
ALTER TABLE MEMBERS ADD CONSTRAINT MEM_LOCA_LOC_LOCID_FK FOREIGN KEY(LOCA) REFERENCES LOCATIONS(LOCATION_ID);

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'MEMBERS';
INSERT INTO MEMBERS VALUES('AAA', 1, '18/07/01', 'M', 1800);
INSERT INTO MEMBERS VALUES('BBB', 2, '18/07/02', 'M', 1900);
INSERT INTO MEMBERS VALUES('CCC', 3, '18/07/03', 'M', 2000);
INSERT INTO MEMBERS VALUES('DDD', 4, SYSDATE, 'M', 2000);

SELECT M.M_NAME,
       M_NUM,
       L.STREET_ADDRESS,
       L.LOCATION_ID
FROM MEMBERS M JOIN LOCATIONS L ON M.LOCA = L.LOCATION_ID
ORDER BY M_NUM;

